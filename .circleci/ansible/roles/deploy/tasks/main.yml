# - name: "wait 600 seconds for target connection to become reachable/usable."
#   ansible.builtin.wait_for_connection:
#   timeout: 100
- name: Copy backend compressed file 
  become: true
  copy:
    src: /home/circleci/project/artifact.tar.gz
    dest: /home/ubuntu/backend/
- name: Extract backend files
  become: true
  shell: |
    cd /home/ubuntu/backend
    tar -vxf artifact.tar.gz
    rm artifact.tar.gz
- name : Compile and start app 
  become : true 
  shell : | 
    cd /home/ubuntu/backend
    sudo npm install
    
    sudo pm2 stop default
    sudo pm2 start npm -- start

# - name: "upgrade packages."
#   become: true
#   apt:
#     upgrade: "yes"
# - name: "install dependencies."
#   become: true
#   apt:
#     name: ["nodejs", "npm"]
#     update_cache: yes
# - name: "install pm2"
#   become: true
#   npm:
#     name: pm2
#     global: yes
#     production: yes
#     state: present
# ---
# - name: "Creates backend app directory"
#   file:
#     path: ~/backend-app
#     state: directory
# - name: "Unarchive backend files"
#   unarchive:
#     src: /root/project/backend/artifact_front.tar.gz
#     /home/circleci/project/artifact.tar.gz
#     dest: ~/backend-app
# - name: "Installing Node Dependencies"
#   shell: |
#     cd ~/backend-app
#     npm i
# - name: "Executing Node app with PM2"
#   shell: |
#     cd ~/backend-app/dist
#     pm2 stop default
#     pm2 start main.js
#   register: execute_node
# - name: print message
#   debug:
#     msg: "{{ execute_node.stdout_lines }}"
# - name: "Configure pm2 to start as service"
#   shell: |
#     sudo su -c "env PATH=$PATH:/usr/local/bin pm2 startup systemd -u ubuntu --hp /home/ubuntu"
#     pm2 save

#   environment:

#     - TYPEORM_CONNECTION: "{{ lookup('env', 'TYPEORM_CONNECTION')}}"
#     - TYPEORM_ENTITIES: "{{ lookup('env', 'TYPEORM_ENTITIES')}}"
#     - TYPEORM_HOST: "{{ lookup('env', 'TYPEORM_HOST')}}"
#     - TYPEORM_PORT: 5432
#     - TYPEORM_USERNAME: "{{ lookup('env', 'TYPEORM_USERNAME')}}"
#     - TYPEORM_PASSWORD: "{{ lookup('env', 'TYPEORM_PASSWORD')}}"
#     - TYPEORM_DATABASE: "{{ lookup('env', 'TYPEORM_DATABASE')}}"
#     - TYPEORM_MIGRATIONS: "{{ lookup('env', 'TYPEORM_MIGRATIONS')}}"
#     - TYPEORM_MIGRATIONS_DIR: "{{ lookup('env', 'TYPEORM_MIGRATIONS_DIR')}}"